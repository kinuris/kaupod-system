import AppLayout from '@/layouts/app-layout';
import { dashboard } from '@/routes';
import { t                <div className=\"relative flex-1 overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border p-6 space-y-6\">
                    <div className=\"flex items-center justify-between\">
                        <h2 className=\"text-xl font-semibold\">Service Tracker</h2>
                        {stats && (
                            <div className=\"flex items-center gap-4 text-sm\">
                                <div className=\"flex items-center gap-2\">
                                    <div className=\"h-2 w-2 bg-amber-500 rounded-full\"></div>
                                    <span className=\"text-gray-600 dark:text-gray-400\">{stats.pendingKitOrders} pending kits</span>
                                </div>
                                <div className=\"flex items-center gap-2\">
                                    <div className=\"h-2 w-2 bg-blue-500 rounded-full\"></div>
                                    <span className=\"text-gray-600 dark:text-gray-400\">{stats.pendingConsultations} pending consultations</span>
                                </div>
                            </div>
                        )}
                    </div>
                    <div className=\"grid md:grid-cols-2 gap-6\"> BreadcrumbItem } from '@/types';
import { Head, Link } from '@inertiajs/react';
import React from 'react';

type Order = { id:number; status:string; user_id?:number; created_at?:string };
type Consultation = { id:number; status:string; user_id?:number; created_at?:string };
interface Stats {
    totalUsers: number;
    activePartnerDoctors: number;
    thisMonthKitOrders: number;
    thisMonthConsultations: number;
    pendingKitOrders: number;
    pendingConsultations: number;
}
interface PageProps { kitOrders?: Order[]; consultationRequests?: Consultation[]; stats?: Stats; }

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: 'Dashboard',
        href: dashboard().url,
    },
];

export default function Dashboard(props: PageProps) {
    const { kitOrders = [], consultationRequests = [], stats } = props;
    return (
        <AppLayout breadcrumbs={breadcrumbs}>
            <Head title="Dashboard" />
            <div className="flex h-full flex-1 flex-col gap-4 overflow-x-auto rounded-xl p-4">
                <div className="grid auto-rows-min gap-4 md:grid-cols-3">
                    {/* Total Users Card */}
                    <div className="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/30">
                        <div className="absolute inset-0 p-6 flex flex-col justify-between">
                            <div className="flex items-center justify-between">
                                <div className="flex h-12 w-12 items-center justify-center rounded-full bg-blue-100 dark:bg-blue-900/40">
                                    <svg className="h-6 w-6 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                                    </svg>
                                </div>
                                <span className="text-xs font-medium text-blue-600 dark:text-blue-400">USERS</span>
                            </div>
                            <div>
                                <div className="text-2xl font-bold text-gray-900 dark:text-white">
                                    {stats?.totalUsers || 0}
                                </div>
                                <p className="text-sm text-gray-600 dark:text-gray-300">Total registered users</p>
                            </div>
                        </div>
                    </div>

                    {/* Active Partner Doctors Card */}
                    <div className="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/30">
                        <div className="absolute inset-0 p-6 flex flex-col justify-between">
                            <div className="flex items-center justify-between">
                                <div className="flex h-12 w-12 items-center justify-center rounded-full bg-green-100 dark:bg-green-900/40">
                                    <svg className="h-6 w-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                    </svg>
                                </div>
                                <span className="text-xs font-medium text-green-600 dark:text-green-400">DOCTORS</span>
                            </div>
                            <div>
                                <div className="text-2xl font-bold text-gray-900 dark:text-white">
                                    {stats?.activePartnerDoctors || 0}
                                </div>
                                <p className="text-sm text-gray-600 dark:text-gray-300">Active partner doctors</p>
                            </div>
                        </div>
                    </div>

                    {/* Monthly Activity Card */}
                    <div className="relative aspect-video overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/30">
                        <div className="absolute inset-0 p-6 flex flex-col justify-between">
                            <div className="flex items-center justify-between">
                                <div className="flex h-12 w-12 items-center justify-center rounded-full bg-purple-100 dark:bg-purple-900/40">
                                    <svg className="h-6 w-6 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                                    </svg>
                                </div>
                                <span className="text-xs font-medium text-purple-600 dark:text-purple-400">THIS MONTH</span>
                            </div>
                            <div>
                                <div className="text-2xl font-bold text-gray-900 dark:text-white">
                                    {(stats?.thisMonthKitOrders || 0) + (stats?.thisMonthConsultations || 0)}
                                </div>
                                <p className="text-sm text-gray-600 dark:text-gray-300">
                                    {stats?.thisMonthKitOrders || 0} kits, {stats?.thisMonthConsultations || 0} consultations
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="relative flex-1 overflow-hidden rounded-xl border border-sidebar-border/70 dark:border-sidebar-border p-6 space-y-6">
                    <h2 className="text-xl font-semibold">Service Tracker</h2>
                    <div className="grid md:grid-cols-2 gap-6">
                        <div className="space-y-2">
                            <div className="flex items-center justify-between">
                                <h3 className="font-medium">Privacy Kit Orders</h3>
                                <Link href="/admin/kit-orders" className="text-xs text-red-700 hover:underline">Manage All</Link>
                            </div>
                            {kitOrders.length === 0 && <p className="text-xs text-neutral-500">No kit orders yet.</p>}
                            <ul className="space-y-2">
                                {kitOrders.map(o => (
                                    <li key={o.id} className="text-xs flex justify-between items-center bg-neutral-50 dark:bg-neutral-800/40 border border-neutral-200 dark:border-neutral-700 rounded px-2 py-1">
                                        <div className="flex flex-col">
                                            <span>Order #{o.id}</span>
                                            {o.user_id && <span className="text-neutral-400">User #{o.user_id}</span>}
                                        </div>
                                        <div className="flex flex-col items-end">
                                            <span className="font-mono bg-neutral-200/60 dark:bg-neutral-700/60 px-2 py-0.5 rounded">{o.status}</span>
                                            {o.created_at && <span className="text-neutral-400 mt-1">{new Date(o.created_at).toLocaleDateString()}</span>}
                                        </div>
                                    </li>
                                ))}
                            </ul>
                        </div>
                        <div className="space-y-2">
                            <div className="flex items-center justify-between">
                                <h3 className="font-medium">Consultation Requests</h3>
                                <Link href="/admin/consultation-requests" className="text-xs text-amber-700 hover:underline">Manage All</Link>
                            </div>
                            {consultationRequests.length === 0 && <p className="text-xs text-neutral-500">No consultation requests yet.</p>}
                            <ul className="space-y-2">
                                {consultationRequests.map(c => (
                                    <li key={c.id} className="text-xs flex justify-between items-center bg-neutral-50 dark:bg-neutral-800/40 border border-neutral-200 dark:border-neutral-700 rounded px-2 py-1">
                                        <div className="flex flex-col">
                                            <span>Request #{c.id}</span>
                                            {c.user_id && <span className="text-neutral-400">User #{c.user_id}</span>}
                                        </div>
                                        <div className="flex flex-col items-end">
                                            <span className="font-mono bg-neutral-200/60 dark:bg-neutral-700/60 px-2 py-0.5 rounded">{c.status}</span>
                                            {c.created_at && <span className="text-neutral-400 mt-1">{new Date(c.created_at).toLocaleDateString()}</span>}
                                        </div>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </AppLayout>
    );
}
